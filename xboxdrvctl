#!/usr/bin/env python

import dbus
import sys
import re
from optparse import OptionParser, OptionGroup

parser = OptionParser("Usage: %prog [OPTIONS] [FILES]")

group = OptionGroup(parser, "D-Bus Options")
group.add_option("-b", "--bus", metavar="BUS",
                  dest="connection", default="org.seul.Xboxdrv",
                  help="connect to D-Bus bus BUS")

group.add_option("-o", "--object", metavar="OBJ",
                  dest="object", default="connect List all resource files",
                  help="use D-Bus object OBJ")
parser.add_option_group(group)

group = OptionGroup(parser, "Xboxdrv Options")
group.add_option("-S", "--status",
                  dest="status", action="store_true",
                  help="print controller status")

group.add_option("-s", "--slot", metavar="SLOT", type="int",
                  dest="slot", 
                  help="use slot SLOT for actions")

group.add_option("-l", "--led", metavar="NUM", type="int",
                  dest="led", 
                  help="set LED")

group.add_option("-r", "--rumble", metavar="L:R", 
                  dest="rumble", 
                  help="Print controller status")
parser.add_option_group(group)

(options, args) = parser.parse_args()

bus = dbus.SessionBus()

if options.status:
    daemon = bus.get_object("org.seul.Xboxdrv", '/org/seul/Xboxdrv/Daemon')
    sys.stdout.write(daemon.Status())
else:
    if (options.led or options.rumble) and options.slot == None:
        print "Error: --slot argument required"
        exit()
    else:
        slot = bus.get_object("org.seul.Xboxdrv", '/org/seul/Xboxdrv/ControllerSlots/%d' % options.slot)
    
        if options.led:
            slot.SetLed(options.led)
        
        if options.rumble:
            m = re.match('^(\d+):(\d+)$', options.rumble)
            if not m:
                print "Error: invalid argument to --rumble"
                exit()
            else:
                left  = int(m.group(1))
                right = int(m.group(2))
                slot.SetRumble(left, right)

# EOF #
