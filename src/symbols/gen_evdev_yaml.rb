#!/usr/bin/ruby -w

def gen_event_list(regex, prefix)
  ret = {}

  File.new("/usr/include/linux/input.h").grep(regex).each do |i|
    name, value = i.split[1..2]
    if not name =~ /_MAX$/ and not name =~ /_CNT$/ 
      begin 
        ret[name] = [] if not ret.has_key?(name)
        ret[name].push("#{prefix}#{Integer(value)}")
      rescue Exception => e  
        # assume we have an alias
        ret[value].push(name)
      end
    end
  end

  return ret
end

key = gen_event_list(/^#define (BTN|KEY)/, "KEY_#")
rel = gen_event_list(/^#define REL/, "KEY_#")
abs = gen_event_list(/^#define ABS/, "KEY_#")

def print_name(fout, syms)
  syms.each do |k,v|
    fout.puts "  - name: '#{k}'"
    v.each do |a|
      fout.puts "    aliases: [#{v.map{|l| "'#{v}'"}.join(', ')}]"
    end if not v.empty?
    fout.puts 
  end
end

File.open("evdev.yaml", "w") do |fout|
  fout.puts "# automatically generated by #{$0}"
  fout.puts "---"
  fout.puts "- name: 'evdev'"
  fout.puts "  aliases: ['ev']"
  fout.puts "  abs:"
  print_name(fout, abs)

  fout.puts "  key:"
  print_name(fout, key)

  fout.puts "  rel:"
  print_name(fout, rel)

  fout.puts "..."
end

# EOF #
